# Generated by Django 4.1.3 on 2023-01-25 09:15

import ckeditor.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nombre')),
                ('image', models.ImageField(null=True, upload_to='product/img', verbose_name='Imagen Principal')),
                ('destacado', models.BooleanField(default=False, verbose_name='Destacada')),
            ],
            options={
                'verbose_name': 'Categoría',
                'verbose_name_plural': 'Categorías',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='GeneralData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logo', models.ImageField(upload_to='datos_generales/logo', verbose_name='Logo')),
                ('img_principal', models.ImageField(upload_to='datos_generales/img_principal', verbose_name='Imagen Principal')),
                ('enterprise_name', models.CharField(max_length=100, verbose_name='Nombre de la empresa')),
                ('enterprise_address', models.CharField(blank=True, max_length=100, null=True, verbose_name='Dirección de la empresa')),
                ('taza_cambio', models.FloatField(help_text='Valor del Euro en CUP', validators=[django.core.validators.MinValueValidator(0, 'Debe ser mayor que cero')], verbose_name='Taza de cambio')),
                ('email', models.EmailField(error_messages={'unique': 'Este correo ya existe'}, max_length=254, unique=True, verbose_name='Correo')),
                ('phone_number', models.CharField(blank=True, error_messages={'unique': 'Ya este teléfono está registrado'}, max_length=17, null=True, unique=True, validators=[django.core.validators.RegexValidator(message='El teléfono debe estar en este formato: +9999999999. Hasta 15 dígitos permitidos.', regex='\\+?1?\\d{9,15}$')], verbose_name='Celular')),
                ('facebook', models.URLField(blank=True, null=True, verbose_name='Link de Facebook')),
                ('instagram', models.URLField(blank=True, null=True, verbose_name='Link de Instagram')),
            ],
            options={
                'verbose_name': 'Datos Generales',
                'verbose_name_plural': 'Datos Generales',
            },
        ),
        migrations.CreateModel(
            name='InfoUtil',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=100, null=True, verbose_name='Título')),
                ('text', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='Contenido')),
            ],
            options={
                'verbose_name': 'Información útil',
                'verbose_name_plural': 'Informaciones útiles',
            },
        ),
        migrations.CreateModel(
            name='Municipio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=255, verbose_name='Nombre')),
                ('precio', models.FloatField(verbose_name='Precio de envío en CUP')),
                ('precio_euro', models.FloatField(verbose_name='Precio de envío en Euro')),
            ],
        ),
        migrations.CreateModel(
            name='Orden',
            fields=[
                ('link_de_pago', models.CharField(blank=True, max_length=500, null=True)),
                ('total', models.FloatField(default=0, verbose_name='Importe total')),
                ('precio_envio', models.FloatField(default=0, verbose_name='Precio de envío')),
                ('moneda', models.CharField(default='Euro', max_length=255)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('1', 'Completada'), ('2', 'Pendiente')], default='2', max_length=10, verbose_name='Estado')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('nombre_comprador', models.CharField(max_length=200, verbose_name='Nombre comprador')),
                ('telefono_comprador', models.CharField(max_length=200, verbose_name='Teléfono comprador')),
                ('nombre_receptor', models.CharField(max_length=200, verbose_name='Nombre receptor')),
                ('telefono_receptor', models.CharField(max_length=200, verbose_name='Teléfono receptor')),
                ('municipio', models.CharField(max_length=200, verbose_name='Municipio')),
                ('calle', models.CharField(max_length=200, verbose_name='Calle')),
                ('calle1', models.CharField(max_length=200, verbose_name='Entre calle 1')),
                ('calle2', models.CharField(max_length=200, verbose_name='Entre calle 2')),
                ('numero_edificio', models.CharField(max_length=200, verbose_name='Número de edificio')),
                ('reparto', models.CharField(max_length=200, verbose_name='Reparto')),
                ('detalles_direccion', models.CharField(max_length=200, verbose_name='Detalles de dirección')),
            ],
        ),
        migrations.CreateModel(
            name='Suscriptor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Correo')),
            ],
            options={
                'verbose_name': 'Suscriptor',
                'verbose_name_plural': 'Suscriptores',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(null=True, upload_to='product/img', verbose_name='Imagen Principal')),
                ('name', models.CharField(max_length=100, verbose_name='Nombre')),
                ('price', models.DecimalField(decimal_places=2, help_text='Poner en base a CUP', max_digits=9, verbose_name='Precio')),
                ('old_price', models.DecimalField(blank=True, decimal_places=2, help_text='Este precio debería ser mayor al precio actual', max_digits=9, null=True, verbose_name='Precio anterior')),
                ('info', ckeditor.fields.RichTextField(blank=True, max_length=400, null=True, verbose_name='Información')),
                ('about', ckeditor.fields.RichTextField(blank=True, max_length=400, null=True, verbose_name='Sobre el producto')),
                ('is_active', models.BooleanField(default=True, verbose_name='Visible')),
                ('is_important', models.BooleanField(default=True, verbose_name='Destacado')),
                ('stock', models.IntegerField(default=1, verbose_name='Cantidad de inventario')),
                ('date_updated', models.DateTimeField(auto_now=True, null=True)),
                ('sales', models.PositiveIntegerField(default=0, verbose_name='Ventas')),
                ('delivery_time', models.PositiveSmallIntegerField(verbose_name='Tiempo de entrega (días)')),
                ('moneda', models.CharField(choices=[('CUP', 'CUP'), ('Euro', 'Euro'), ('Ambas', 'Ambas')], default='CUP', max_length=200, verbose_name='Moneda')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_main.category', verbose_name='Categoría')),
            ],
            options={
                'verbose_name': 'Producto',
                'verbose_name_plural': 'Productos',
                'ordering': ('category',),
            },
        ),
        migrations.CreateModel(
            name='ComponenteOrden',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('respaldo', models.FloatField()),
                ('cantidad', models.IntegerField()),
                ('orden', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='componente_orden', to='app_main.orden')),
                ('producto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='componente_producto', to='app_main.product')),
            ],
        ),
        migrations.CreateModel(
            name='Banner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('banner', models.ImageField(null=True, upload_to='datos_generales/banner', verbose_name='Banner')),
                ('gnd', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_main.generaldata')),
            ],
        ),
    ]
