# Generated by Django 4.1.5 on 2023-10-04 10:36

import app_main.models
import ckeditor.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nombre')),
                ('image', models.ImageField(blank=True, null=True, upload_to='category/img', verbose_name='Imagen Principal')),
                ('destacado', models.BooleanField(default=False, verbose_name='Destacada')),
            ],
            options={
                'verbose_name': 'Categoría',
                'verbose_name_plural': 'Categorías',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='ExtraPaymentMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True, verbose_name='Activo')),
                ('name', models.CharField(max_length=255, verbose_name='Nombre')),
                ('card', models.CharField(max_length=255, verbose_name='Número de Tarjeta')),
                ('confirmation_number', models.CharField(max_length=255, verbose_name='Móvil a Confirmar')),
                ('type', models.CharField(choices=[('cup', 'C.U.P'), ('mlc', 'MLC')], default='cup', max_length=255, verbose_name='Tipo')),
            ],
            options={
                'verbose_name': 'Método Extra de Pago',
                'verbose_name_plural': 'Métodos Extra de Pago',
            },
        ),
        migrations.CreateModel(
            name='GeneralData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logo', models.ImageField(upload_to='datos_generales/logo', verbose_name='Logo')),
                ('img_principal', models.ImageField(upload_to='datos_generales/img_principal', verbose_name='Imagen Principal')),
                ('enterprise_name', models.CharField(max_length=100, verbose_name='Nombre de la empresa')),
                ('enterprise_address', models.CharField(blank=True, max_length=100, null=True, verbose_name='Dirección de la empresa')),
                ('taza_cambio', models.FloatField(help_text='Valor del Euro en CUP', validators=[django.core.validators.MinValueValidator(0, 'Debe ser mayor que cero')], verbose_name='Tasa de cambio')),
                ('tasa_mlc', models.FloatField(default=200, help_text='Valor del MLC en CUP', validators=[django.core.validators.MinValueValidator(0, 'Debe ser mayor que cero')], verbose_name='Tasa de cambio MLC')),
                ('tropipay_impuesto', models.FloatField(default=3.45, help_text='Porciento del total de la orden aumentado', validators=[django.core.validators.MinValueValidator(0, 'Debe ser mayor que cero')], verbose_name='Impuesto de Tropipay')),
                ('email', models.EmailField(error_messages={'unique': 'Este correo ya existe'}, max_length=254, unique=True, verbose_name='Correo')),
                ('phone_number', models.CharField(blank=True, error_messages={'unique': 'Ya este teléfono está registrado'}, max_length=17, null=True, unique=True, validators=[django.core.validators.RegexValidator(message='El teléfono debe estar en este formato: +9999999999. Hasta 15 dígitos permitidos.', regex='\\+?1?\\d{9,15}$')], verbose_name='Celular')),
                ('facebook', models.URLField(blank=True, null=True, verbose_name='Link de Facebook')),
                ('instagram', models.URLField(blank=True, null=True, verbose_name='Link de Instagram')),
                ('meta_tittle', models.CharField(default='GAIA', help_text='Search Engine Optimization (SEO)', max_length=255, verbose_name='Meta etiqueta título')),
                ('meta_description', models.TextField(default='GAIA', help_text='Search Engine Optimization (SEO)', verbose_name='Meta etiqueta descripción')),
                ('meta_kw', models.TextField(default='GAIA', help_text='Search Engine Optimization (SEO)', verbose_name='Meta etiqueta palabras clave')),
                ('checkout_allowed', models.BooleanField(default=True, help_text='Permitir a los usuarios realizar compras', verbose_name='Permitir compras')),
                ('closed_message', models.CharField(default='Lo sentimos, estamos cerrados.', help_text='Texto a mostrar cuando la tienda está cerrada', max_length=255, verbose_name='Mensaje de Cerrado')),
            ],
            options={
                'verbose_name': 'Datos Generales',
                'verbose_name_plural': 'Datos Generales',
            },
        ),
        migrations.CreateModel(
            name='InfoUtil',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=100, null=True, verbose_name='Título')),
            ],
            options={
                'verbose_name': 'Información útil',
                'verbose_name_plural': 'Informaciones útiles',
            },
        ),
        migrations.CreateModel(
            name='Municipio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=255, verbose_name='Nombre')),
                ('precio', models.FloatField(verbose_name='Precio de envío en CUP')),
                ('precio_euro', models.FloatField(verbose_name='Precio de envío en Euro')),
                ('visible', models.BooleanField(default=True)),
                ('is_pickup_place', models.BooleanField(default=False, verbose_name='Punto de recogida')),
            ],
            options={
                'verbose_name': 'Reparto',
                'verbose_name_plural': 'Repartos',
            },
        ),
        migrations.CreateModel(
            name='Opinion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('calification', models.PositiveIntegerField(validators=[app_main.models.validate_calification], verbose_name='Calificacion')),
                ('comment', models.TextField(null=True, verbose_name='Commentario')),
            ],
            options={
                'verbose_name': 'Opinion',
                'verbose_name_plural': 'Opinions',
            },
        ),
        migrations.CreateModel(
            name='Orden',
            fields=[
                ('link_de_pago', models.CharField(blank=True, max_length=500, null=True)),
                ('total', models.FloatField(default=0, verbose_name='Importe total')),
                ('precio_envio', models.FloatField(default=0, verbose_name='Precio de envío')),
                ('moneda', models.CharField(default='Euro', max_length=255)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('1', 'Completada'), ('2', 'Pendiente'), ('3', 'Cancelada')], default='2', max_length=10, verbose_name='Estado')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Fecha')),
                ('tiempo_de_entrega', models.PositiveIntegerField(verbose_name='Tiempo de entrega máximo')),
                ('nombre_comprador', models.CharField(max_length=200, verbose_name='Nombre del comprador')),
                ('telefono_comprador', models.CharField(max_length=200, verbose_name='Teléfono del comprador')),
                ('correo', models.EmailField(blank=True, help_text='No necesario para compras en C.U.P', max_length=254, null=True, verbose_name='Correo del comprador')),
                ('nombre_receptor', models.CharField(blank=True, help_text='Eliminado', max_length=200, null=True, verbose_name='Nombre del receptor')),
                ('telefono_receptor', models.CharField(blank=True, help_text='Eliminado', max_length=200, null=True, verbose_name='Teléfono del receptor')),
                ('municipio', models.CharField(max_length=200, verbose_name='Reparto')),
                ('calle', models.CharField(max_length=200, verbose_name='Calle')),
                ('calle1', models.CharField(max_length=200, verbose_name='Entre calle 1')),
                ('calle2', models.CharField(max_length=200, verbose_name='Entre calle 2')),
                ('numero_edificio', models.CharField(max_length=200, verbose_name='Número de edificio')),
                ('detalles_direccion', models.CharField(blank=True, max_length=200, null=True, verbose_name='Detalles de dirección')),
            ],
            options={
                'verbose_name': 'Orden',
                'verbose_name_plural': 'Ordenes',
                'ordering': ('-date_created', '-status'),
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(null=True, upload_to='product/img', verbose_name='Imagen Principal')),
                ('name', models.CharField(max_length=100, verbose_name='Nombre')),
                ('price', models.DecimalField(decimal_places=2, help_text='Poner en base a CUP', max_digits=9, verbose_name='Precio')),
                ('old_price', models.DecimalField(blank=True, decimal_places=2, help_text='Este precio debería ser mayor al precio actual', max_digits=9, null=True, verbose_name='Precio anterior')),
                ('info', ckeditor.fields.RichTextField(blank=True, max_length=400, null=True, verbose_name='Información')),
                ('about', ckeditor.fields.RichTextField(blank=True, max_length=400, null=True, verbose_name='Sobre el producto')),
                ('is_active', models.BooleanField(default=True, verbose_name='Visible')),
                ('is_important', models.BooleanField(default=True, verbose_name='Destacado')),
                ('stock', models.IntegerField(default=1, verbose_name='Cantidad de inventario')),
                ('date_updated', models.DateTimeField(auto_now=True, null=True)),
                ('sales', models.PositiveIntegerField(default=0, verbose_name='Ventas')),
                ('delivery_time', models.PositiveSmallIntegerField(verbose_name='Tiempo de entrega (días)')),
                ('moneda', models.CharField(choices=[('CUP', 'CUP'), ('Euro', 'Euro'), ('Ambas', 'Ambas')], default='CUP', max_length=200, verbose_name='Moneda')),
                ('codigo', models.CharField(blank=True, editable=False, max_length=100, null=True, verbose_name='Código')),
                ('system_code', models.CharField(blank=True, max_length=255, null=True, verbose_name='Código del Sistema')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_main.category', verbose_name='Categoría')),
            ],
            options={
                'verbose_name': 'Producto',
                'verbose_name_plural': 'Productos',
                'ordering': ('category',),
            },
        ),
        migrations.CreateModel(
            name='Suscriptor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Correo')),
            ],
            options={
                'verbose_name': 'Suscriptor',
                'verbose_name_plural': 'Suscriptores',
            },
        ),
        migrations.CreateModel(
            name='ProductExtraImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='product/img', verbose_name='Imagen')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_main.product')),
            ],
            options={
                'verbose_name': 'Imagen Extra',
                'verbose_name_plural': 'Imágenes Extra',
            },
        ),
        migrations.CreateModel(
            name='ContenidoInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='Contenido')),
                ('image', models.ImageField(blank=True, null=True, upload_to='info/', verbose_name='Imagen')),
                ('info', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_main.infoutil')),
            ],
        ),
        migrations.CreateModel(
            name='ComponenteOrden',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('respaldo', models.FloatField()),
                ('cantidad', models.IntegerField()),
                ('orden', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='componente_orden', to='app_main.orden')),
                ('producto', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='componente_producto', to='app_main.product')),
            ],
            options={
                'verbose_name': 'Componente de orden',
                'verbose_name_plural': 'Componentes de ordenes',
                'ordering': ('orden', 'producto'),
            },
        ),
        migrations.CreateModel(
            name='Banner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('banner', models.ImageField(null=True, upload_to='datos_generales/banner', verbose_name='Banner')),
                ('gnd', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_main.generaldata')),
            ],
        ),
    ]
